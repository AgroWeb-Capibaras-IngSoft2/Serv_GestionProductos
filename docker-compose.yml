# Docker Compose para AgroWeb - Servicio de Productos
# Incluye: Base de datos Cassandra + Stack de Observabilidad (Prometheus + Grafana)

services:
  # Base de datos principal
  cassandra:
    image: cassandra:4.0
    container_name: agroweb-cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=AgroWebCluster
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_RACK=rack1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
    volumes:
      - cassandra_data:/var/lib/cassandra
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'describe cluster'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  # Sistema de métricas - recolecta datos del API nativo
  prometheus:
    image: prom/prometheus:latest
    container_name: agroweb-prometheus
    ports:
      - "9090:9090"  # UI de Prometheus
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Acceso al API nativo

  # Sistema de visualización - dashboards de métricas
  grafana:
    image: grafana/grafana:latest
    container_name: agroweb-grafana
    ports:
      - "3001:3000"  # UI de Grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=agroweb2025
      - GF_INSTALL_PLUGINS=
    volumes:
      - grafana_data:/var/lib/grafana
      - ./observability/grafana-datasources:/etc/grafana/provisioning/datasources:ro
      - ./observability/grafana-dashboards:/etc/grafana/provisioning/dashboards:ro
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  cassandra_data:
    driver: local
  grafana_data:
    driver: local
